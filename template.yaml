AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume-sam-template

  Sample SAM Template for cloud-resume-sam-template

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  NewCloudResumeWebsite:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: recreated-website2351
  
  MyRoute53Record:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: Z0695869YGMPHU4OBDN # TODO: Don't hardcode me
      RecordSets:
        - Name: anthony-coughlin-resume.com # TODO: Don't hardcode me
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt MyDistribution.DomainName
    
 # MyCertificate:
  #  Type: AWS::CertificateManager::Certificate
   # Properties:
    #  DomainName: anthony-coughlin-resume.com # TODO: Don't hardcode me
     # ValidationMethod: DNS

  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        #ViewerCertificate:
         #   AcmCertificateArn: !Ref MyCertificate
          #  SslSupportMethod: sni-only
        #Aliases:
         # - anthony-coughlin-resume.com
        DefaultCacheBehavior:
          ViewerProtocolPolicy: allow-all
          TargetOriginId: recreated-website2351.s3-website-eu-west-1.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: recreated-website2351.s3-website-eu-west-1.amazonaws.com
            Id: recreated-website2351.s3-website-eu-west-1.amazonaws.com
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        Enabled: "true"
        DefaultRootObject: index.html


  GetFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: get-function/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        GetFunc:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /get
            Method: get
  

  PutFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: put-function/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        PutFunc:
          Type: Api 
          Properties:
            Path: /put
            Method: GET
